// SPACING functions
// ────────────────────────────────────

// Mulitply the `spacer` token by the passed value
@function space($multiplier) {
  $str: #{$multiplier};
  $multipliers: str-to-list($str);
  @if length($multipliers) > 1 {
    @if length($multipliers) == 2 {
      $m1: nth($multipliers, 1);
      $m2: nth($multipliers, 2);
      @return calc(#{$spacer} * #{$m1}) calc(#{$spacer} * #{$m2});
    } 
    @else if length($multipliers) == 3 {
      $m1: nth($multipliers, 1);
      $m2: nth($multipliers, 2);
      $m3: nth($multipliers, 3);
      @return calc(#{$spacer} * #{$m1}) calc(#{$spacer} * #{$m2}) calc(#{$spacer} * #{$m3});


      // @return (calc(#{#{$spacer}} #{* #{$}m1})) (#{$spacer} * #{$m2}) (#{$spacer} * #{$m3});
    }
    @else if length($multipliers) == 4 {
      $m1: nth($multipliers, 1);
      $m2: nth($multipliers, 2);
      $m3: nth($multipliers, 3);
      $m4: nth($multipliers, 4);
      @return calc(#{$spacer} * #{$m1}) calc(#{$spacer} * #{$m2}) calc(#{$spacer} * #{$m3}) calc(#{$spacer} * #{$m4});
      // @return (calc(#{#{$spacer}} #{* #{$}m1})) (#{$spacer} * #{$m2}) (#{$spacer} * #{$m3}) (#{$spacer} * #{$m4});
    }
    @else {
      @error 'Error: space: too many arguments';
    }
  }
  @else {
    @return calc(#{$spacer} * #{$multiplier});
  } 
}

// Alias shorthand for `space` function
@function sp($multipliers...) {
  @return space($multipliers...);
}